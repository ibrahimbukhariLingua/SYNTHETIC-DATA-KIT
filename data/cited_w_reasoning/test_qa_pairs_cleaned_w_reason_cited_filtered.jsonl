{"chunk": "Chunk:\n\n[S1] Longevity: Finally, to enable research and experimental comparison in a long term, the\nscenarios and the data in the benchmark shall not quickly expire and ideally shall be refreshed\nand improved over time. [S2] We strive to create a benchmark that have all of the aforementioned features, and we call it CRAG \u2013\nComprehensive benchmark for RAG. [S3] Our work makes three contributions. [S4] Our first contribution is the dataset itself (Section 3). [S5] CRAG contains a rich set of 4,409 QA pairs\nfrom five domains: Finance, Sports, Music, Movie, and Open domain. [S6] In addition to simple-fact\nquestions (asking for an attribute of an entity), CRAG contains seven types of complex questions to\ncover real user queries: questions with Conditions, Comparison questions, Aggregation questions,\nMulti-hop questions, Set queries, Post-processing-heavy questions, and False-premise questions. [S7] CRAG reflects varied entity popularity from popular to long-tail and temporal spans ranging from\nseconds to years, allowing easy deep dives for insights. [S8] As we generated the questions, we referred\nto smart assistant use cases to make sure the questions are realistic, paraphrased the questions to\nincrease the diversity of expressions, and manually verified ground truths to ensure reliability. [S9] In addition to QA pairs, CRAG provides mock APIs to simulate retrieval from a diverse range of\navailable information. [S10] This includes up to 50 full HTML pages for each question returned from a\nreal-world search engine\u2014the Brave Search API [5], and mock KGs with 2.6 million entities. [S11] For the\nmock KGs, we deliberately make sure that the retrieval candidates reflect noises in a realistic setting. [S12] Our second contribution is the evaluation mechanism to allow for reliable comparisons. [S13] We designed\n3 tasks to test different components in RAG solutions: retrieval summarization, knowledge graph\nand web retrieval, and end-to-end retrieval-augmented generation (Section 2). [S14] Instead of computing\nthe percentage of correctly answered questions, our score system distinguishes hallucinated answers\nand missing answers, and gives the former a higher penalty as it can be more harmful to ruin user\n\n2\n\nLLMWhat is the gold price today?Gold price is at $1626.81 per ounce today Oct 21 2022.Gold price is at $2020.8 per ounce today Jan 28 2024.DocumentsWeb SearchReal-time APIsKnowledge GraphRetrieved relevantknowledgeQuestion (a) LLM Direct Generation(b) RAG: Retrieved-Augmented Generation with LLM\fTable 1: Comparing CRAG to existing benchmarks for factual question answering. [S15] Benchmark\n\nQALD-10 [35]\nMS MARCO [4]\nNQ [18]\nRGB [6]\nFreshLLM [36]\nCRAG\n\nWeb\nretrieval\n\u2717\n\u2713\n\u2713\n\u2713\n\u2717\n\u2713\n\nKG\nsearch\n\u2713\n\u2717\n\u2717\n\u2717\n\u2717\n\u2713\n\nMock\nAPI\n\u2717\n\u2717\n\u2717\n\u2717\n\u2717\n\u2713\n\nDynamic\nquestion\n\u2717\nnot explicitly\nnot explicitly\n\u2717\n\u2713\n\u2713\n\nTorso and\ntail facts\n\u2717\nnot explicitly\nnot explicitly\n\u2717\n\u2717\n\u2713\n\nBeyond\nWikipedia\n\u2717\n\u2713\n\u2717\n\u2713\n\u2713\n\u2713\n\nQuestion\nsize\n\n0.8K\n100K\n323K\n1K\n0.6K\n4.4K\n\ntrust. [S16] We also design an effective automatic evaluation mechanism to allow for fast evaluations and\niterations (Section 4). [S17] Our third contribution is a comprehensive evaluation of straightforward RAG solutions and industry\nstate-of-the-art solutions on RAG (Section 5). [S18] Whereas most advanced LLMs achieve \u010f 34%\naccuracy on CRAG, adding RAG in a straightforward manner improves the accuracy only to 44%. [S19] State-of-the-art industry RAG solutions answer only 63% questions without any hallucination, still\nhaving much lower accuracy in answering questions regarding facts with higher dynamism, lower\npopularity, or higher complexity. [S20] These evaluations serve two roles: first, they demonstrate that\nCRAG has appropriate level of difficulty and allows insights drawn from different dimensions of\ndiversities the benchmark has incorporated; second, they highlight the gaps and research directions to\na fully trustworthy QA system. [S21] The CRAG benchmark laid the groundwork for a KDD Cup 2024 challenge2, has attracted thousands\nof participants and submissions within the first 50 days of the competition. [S22] We commit to maintaining\nCRAG to serve research communities in advancing RAG solutions and general QA solutions. [S23] Comparison with existing benchmarks. [S24] Table 1 compares CRAG with existing benchmarks for\nfactual question answering. [S25] Traditional QA benchmarks such as Natural Questions (NQ) [18],\nTriviaQA [16], MS MARCO [4], and QALD-10 [35] have advanced QA in the past decade but\nconsider only web retrieved or KG retrieved contents, and do not adequately represent the diverse\nand dynamic challenges that RAG is facing. [S26] New benchmarks for LLM or RAG usually target certain\ncapabilities of the QA system. [S27] Researchers created benchmarks to evaluate how well the systems\ncan answer simple knowledge questions [23, 29, 30] and handle more advanced scenarios. [S28] These\ninclude answering questions with changing answers [36], integrating information from multiple\ndocuments [6], addressing multi-hop questions [33], and answering questions with long texts [26]. [S29] Moreover, traditional QA benchmarks usually adopt matching-based metrics such as ROUGE [21]\nor F1 to evaluate the quality of the responses [16, 18]. [S30] These metrics, although working well for\nextractive methods, are known to not perform very effectively for LLMs that generate free-form\nresponses [11]. [S31] Despite CRAG being smaller than MS MARCO and NQ, it offers several distinctive advantages:\ncomprehensive coverage, realistic testing with mock APIs, dynamic question handling, diverse fact\npopularity, extensive content beyond Wikipedia, and fast yet reliable evaluation. [S32] These features make\nCRAG a robust and versatile benchmark for testing RAG systems and broadly QA systems, providing\na shared testbed to evaluate how these systems handle real-world, dynamic, and diverse information\nretrieval and synthesis challenges for reliable LLM-based question answering. [S33] 2 Problem Description", "question": "What are the three contributions of the CRAG benchmark?", "answer": "<statement>Our work makes three contributions.<cite>[S3]</cite></statement> <statement>Our first contribution is the dataset itself (Section 3).<cite>[S4]</cite></statement> <statement>Our second contribution is the evaluation mechanism to allow for reliable comparisons.<cite>[S12]</cite></statement> <statement>Our third contribution is a comprehensive evaluation of straightforward RAG solutions and industry state-of-the-art solutions on RAG (Section 5).<cite>[S17]</cite></statement>", "thinking": "Okay, let's tackle this question. The user is asking for the three contributions of the CRAG benchmark. I need to look through the provided supporting context and find the relevant sentences.\n\nFirst, I'll scan the text for mentions of contributions. Starting from the beginning, sentence S3 says, \"Our work makes three contributions.\" That's a key point. Then, looking for each contribution. \n\nS4 mentions the first contribution: \"Our first contribution is the dataset itself (Section 3).\" So that's the first one. \n\nNext, S12 states, \"Our second contribution is the evaluation mechanism to allow for reliable comparisons.\" That's the second contribution. \n\nThen, S17 says, \"Our third contribution is a comprehensive evaluation of straightforward RAG solutions and industry state-of-the-art solutions on RAG (Section 5).\" That's the third contribution. \n\nI should check if there are any other sentences that might add more details, but the question specifically asks for the three contributions, which are clearly listed in S3, S4, S12, and S17. Wait, S3 mentions three contributions, and then each of S4, S12, S17 details each one. So the three contributions are the dataset, the evaluation mechanism, and the comprehensive evaluation of solutions. \n\nI need to make sure there are no other contributions mentioned. Scanning through the rest of the context, other sentences talk about features of the dataset, evaluation tasks, etc., but the three main contributions are covered in S4, S12, and S17. \n\nSo the answer should list these three, each with their respective citations. The user wants each sentence in <statement> tags with citations. So each contribution is a separate statement with the relevant citation."}
{"chunk": "Chunk:\n\n[S1] condition\nSet\nComparison\nAggregation\nMulti-hop\nPost-processing heavy\nFalse Premise\n\n466 (45)\n113 (11)\n48 ( 5)\n146 (14)\n69 ( 7)\n86 ( 8)\n26 ( 3)\n85 ( 8)\n\n23 ( 3)\n250 (30)\n93 (11)\n85 (10)\n137 (16)\n64 ( 8)\n24 ( 3)\n157 (19)\n\n112 (18)\n92 (15)\n72 (12)\n102 (16)\n96 (15)\n55 ( 9)\n26 ( 4)\n69 (11)\n\n519 (46)\n112 (10)\n104 ( 9)\n105 ( 9)\n71 ( 6)\n90 ( 8)\n28 ( 2)\n96 ( 9)\n\n85 (11)\n122 (15)\n86 (11)\n98 (12)\n116 (15)\n87 (11)\n76 (10)\n118 (15)\n\n1,205 (27)\n689 (16)\n403 ( 9)\n536 (12)\n489 (11)\n382 ( 9)\n180 ( 4)\n525 (12)\n\nAll\n\n1,039\n\n833\n\n624\n\n1,125\n\n788\n\n4,409\n\n3.1 Question answering pairs\n\nCRAG covers five domains: Finance, Sports, Music, Movie, and Open domain, and eight types of\nquestions, all in English. [S2] The question types are listed in Table 2. [S3] We constructed the question-answer\npairs both from underlying KGs and web contents. [S4] QA pairs constructed from KGs. [S5] We constructed QA pairs from KGs by collecting a set of entities\nbased on publicly available data and then creating 600+ question templates based on selected entity\ntypes and relations. [S6] Next, we sampled entities with different popularities (head, torso and tail)\nfollowing [29] from the KGs to fill in the templates and generate the full question and answer. [S7] QA pairs constructed from web contents. [S8] We asked annotators to write down possible questions\nthat users may ask (e.g., \u201cmost popular action movies in 2023\u201d) and created QA pairs from the\ncorresponding web search results. [S9] Using the above methods, we collected 2,425 Web Questions and 1,984 KG Questions, with 661, 658,\nand 665 KG Questions containing head, torso, and tail entities respectively. [S10] Tables 3 and 4 summarize\nthe distribution of the questions across different dimensions. [S11] The size of each dimension slice (e.g.,\nfast-changing facts) allows us to get metrics with \u0103 5% margin-of-error (with 95% confidence level)\nfor most of the cases. [S12] The dynamism distribution roughly reflects the nature of the domain (e.g.,\nmuch more real-time questions for Finance than for other domains). [S13] See Appendix A.1.2 for the\ndefinition of the dynamism categories. [S14] 3.2 Contents for retrieval\n\nWe included two types of contents for retrieval to simulate the practical scenario for RAG: web search\nand KG search. [S15] Web search results. [S16] For each question, we used the question text as the search query and stored up\nto 50 HTML pages from the Brave search API [5]. [S17] See Table 8 in Appendix A.1.5 for an example. [S18] We estimated the web search recall with a heuristic-based method: first check whether the ground\ntruth answer URL was found among the pages; if not, decide whether the fact in the ground truths is\ncontained in the page snippet or content with an LLM. [S19] In particular, we pass the question, ground\ntruth, and the pages to Llama 3 70B Instruct and ask it to judge if the context is sufficient to answer\nthe question. [S20] 5\n\n\fFigure 2: For 85% of CRAG questions, the web search results are estimated to contain the ground\ntruth facts. [S21] The curve shows that the retrieval recall grows sharply at the beginning and flattens out\nlater on. [S22] Figure 2 shows the estimated web search recall curve for all CRAG questions, with an overall recall\nof 85% when using all 50 pages. [S23] It reflects multiple advantages of the benchmark by design. [S24] First,\nthe recall curves are sharp at the beginning and flatten out later, and the recall for the top 5 pages is\nabout 69%. [S25] This is comparable to what we observe in practice when developing a RAG system. [S26] The\nnon-perfect coverage, especially for Task 1, allows us to test whether the RAG solutions admit \u201cI\ndon\u2019t know\u201d when the retrieval results do not contain the necessary information. [S27] Second, compared\nto the recall from web snippets, full web pages increase the recall by about 20%, emphasizing the\nimportance of extracting and understanding HTML contents. [S28] Moreover, the estimated web search\nrecall (50 web pages) is 93% for Web Questions and 74% for KG Questions, indicating significantly\nlower recall for KG questions than web questions. [S29] This aligns with our observations that web search\nrecall for torso and tail entities is typically lower, underlining the crucial role of leveraging KGs in\nTask 2 and 3. [S30] Mock KGs. [S31] We created mock KGs that contain publicly available KG data used to generate the\nquestions, randomly selected entities of the same type, and also \u201chard negative\u201d entities with similar\nnames (e.g., \u201cphantom\u201d for \u201cphantom of the opera\u201d). [S32] Mock APIs. [S33] We created mock APIs with pre-defined parameters to support structured search in the\nmock KGs. [S34] For example, for queries asking for stock prices, an example mock API is in the form of\nget_price_history(ticker). [S35] We collected snapshots of the KG and web search data concurrently while posing real-time and\nfast-changing questions. [S36] This approach ensures that we capture the \u201csnapshot\u201d of the information\nworld at the time of question answering. [S37] A RAG solution that performs well on the benchmark should\nalso be capable of reasoning over time and generalizing to evolving questions. [S38] In total, the resulting data contains 220K webpages, a KG of 2.6M entities, and 38 mock APIs. [S39] See\nTable 9 in the Appendix for a complete list of the mock APIs. [S40] 4 Metrics and Evaluation\n\nIn this section, we present the metrics for evaluating the RAG systems and briefly describe the 2024\nMeta KDD Cup challenge in Appendix A.2.3. [S41] 4.1 Metrics\n\nWe use a scoring method to assess the performance of RAG systems. [S42] For each question in the\nevaluation set, we first label the answer with perfect, acceptable, missing, or incorrect, according to\nthe following criteria. [S43] Perfect. [S44] The response correctly answers the user\u2019s question and contains no hallucinated content. [S45] 6\n\n05101520253035404550Number of retrieved web pages0102030405060708090100Estimated recall (%)45.152.856.157.659.560.861.862.863.564.469.476.279.080.181.182.282.983.683.984.6Page snippets+ Full pages\fAcceptable. [S46] The response provides a useful answer to the user\u2019s question but may contain minor\nerrors that do not harm the usefulness of the answer.", "question": "What are the five domains covered by the CRAG dataset?", "answer": "<statement>CRAG covers five domains: Finance, Sports, Music, Movie, and Open domain, and eight types of questions, all in English.<cite>[S2]</cite></statement>", "thinking": "Okay, let's tackle this question. The user is asking for the five domains covered by the CRAG dataset. I need to look through the provided supporting context to find that information.\n\nFirst, I'll scan the passage for any mention of domains. The user mentioned that the answer should be based on the supporting context, so I must rely solely on the given text. \n\nLooking at the text, there's a section that starts with \"CRAG covers five domains: Finance, Sports, Music, Movie, and Open domain, and eight types of questions, all in English.\" This sentence clearly lists the five domains. The citation here is [S2]. \n\nI should check if there are any other mentions of domains elsewhere in the text, but from a quick scan, this seems to be the only place. The rest of the context discusses question types, data collection methods, retrieval contents, and metrics, but not the domains. \n\nSo the answer should list Finance, Sports, Music, Movie, and Open domain, with the citation [S2]. I need to make sure each domain is correctly listed and that the citation is properly placed. No other citations are needed here since the information is directly stated in that one sentence."}
{"chunk": "Chunk:\n\n[S1] The response correctly answers the user\u2019s question and contains no hallucinated content. [S2] 6\n\n05101520253035404550Number of retrieved web pages0102030405060708090100Estimated recall (%)45.152.856.157.659.560.861.862.863.564.469.476.279.080.181.182.282.983.683.984.6Page snippets+ Full pages\fAcceptable. [S3] The response provides a useful answer to the user\u2019s question but may contain minor\nerrors that do not harm the usefulness of the answer. [S4] Missing. [S5] The response is \u201cI don\u2019t know\u201d, \u201cI\u2019m sorry I can\u2019t find ...\u201d, a system error such as an empty\nresponse, or a request from the system to clarify the original question. [S6] Incorrect. [S7] The response provides wrong or irrelevant information to answer the user\u2019s question. [S8] We use a scoring method with score 1, 0.5, 0, and \u00b41 for each perfect, acceptable, missing, and\nincorrect answer, respectively, where we penalize hallucinated answers and prefer missing answers to\nincorrect ones. [S9] We then define truthfulness as the average score from all examples in the evaluation\nset for a given RAG system. [S10] 4.2 Evaluation\n\nSimilar to previous work [37], we employ both human evaluation (human-eval) and model-based\nautomatic evaluation (auto-eval). [S11] In the former, we use manual grading to judge perfect, acceptable,\nmissing, and incorrect for each answer. [S12] In the latter, we merge perfect and acceptable, call it accurate,\nand use a three-way scoring system with 1, \u00b41, 0 for accurate, incorrect, and missing answers. [S13] We design a two-step method for automatic evaluation: if the answer matches the ground truth exactly,\nit is considered accurate; otherwise, we use LLMs to determine whether the response is accurate,\nincorrect, or missing. [S14] To avoid the self-preference problem [25], we use two LLM evaluators:\nChatGPT (gpt-3.5-turbo-0125) [24] and Llama 3 (llama-3-70B-instruct) [2] and report the\naverage accurate, hallucination, missing rates, and truthfulness scores from the two models for each\nRAG system. [S15] Our offline experiment shows that this two-step method yields an average F1 score of\n94.7% for ChatGPT and 98.9% for Llama 3 compared to human-eval. [S16] See Appendix A.2.2 for more\ndetails. [S17] Test data split. [S18] We split the data randomly into validation (30%), public test (30%), and private\n(40%), and released the validation and public test sets (Appendix A.2.3). [S19] Participants of the KDD\nCup challenge can use the validation and public test sets to develop and test their models, and the\nsubmitted solutions were evaluated on the private test set. [S20] Future offline users of CRAG can use\nthe validation set for development, fine-tuning, and validation, and the public test set for testing and\nresult reporting. [S21] 5 Benchmarking\n\nIn this section, we present the performance of LLMs and RAG systems on CRAG, demonstrating\nthat CRAG has a reasonable level of difficulty and can help draw insights and show directions in\ndeveloping RAG techniques. [S22] 5.1 Straightforward RAG solutions\n\nExperiment setup: We started with running LLM-only solutions on the CRAG public test\nset with 1, 335 questions, using simple prompts that encourage brief answers and \u201cI don\u2019t\nknow\u201d answers when the confidence is low (Appendix A.3.1). [S23] We employed Llama 2 Chat\n(llama-2-7b-chat and llama-2-70b-chat) [34], Llama 3 Instruct (llama-3-8B-instruct and\nllama-3-70B-instruct) [2], Mixtral (Mixtral-8x7B-Instruct-v0.1) [15], Falcon (40B) [3],\nFLAN-T5 (FLAN-T5-XXL) [9], and GPT-4 Turbo (gpt-4-turbo-2024-04-09) [1]. [S24] The web-only\nRAG solutions we evaluated (Task 1) used a fixed-length web context window (1K tokens for Falcon\nand FLAN-T5, 2K for Llama 2 Chat, and 4K for Llama 3 Instruct and GPT-4 Turbo); we concatenated\nwebpage snippets using the original order from the data as the reference text, until filling up the\nwindow (similar to [17, 23, 36]). [S25] Our KG-based solutions (Tasks 2, 3) additionally used a fixed-length\nKG context window (0.5K tokens for Falcon and FLAN-T5, 1K for Llama 2 Chat, and 2K for Llama\n3 Instruct and GPT-4 Turbo) to include the results from the mock APIs; we extracted the relevant\nquery entities using llama-3-8B-instruct with in-context learning (similar to [28]) detailed in\nAppendix A.3.1 and concatenated the results returned from all applicable mock APIs (based on the\nextracted entities), until filling up the window. [S26] We provide an extensive comparison of all LLMs\nin Appendix A.3.2 and focus on the best-performing LLMs (i.e., Llama 3 70B Instruct and GPT-4\nTurbo) in this section. [S27] 7\n\n\fTable 5: Performance of straightforward RAG solutions. [S28] All numbers are in percentage. [S29] LLM-only\nsolutions has up to 34% accuracy and straightforward RAG solutions has up to 44% accuracy. [S30] The\nsubscript in \u201ctruthfulnessa\u201d denotes the result is reported by auto-eval. [S31] Model\n\nAccuracy Hallucination Missing Truthfulnessa\n\nLLM only\n\nTask 1\n\nTask 2\n\nTask 3\n\nLlama 3 70B Instruct\nGPT-4 Turbo\n\nLlama 3 70B Instruct\nGPT-4 Turbo\n\nLlama 3 70B Instruct\nGPT-4 Turbo\n\nLlama 3 70B Instruct\nGPT-4 Turbo\n\n32.3\n33.5\n\n35.6\n35.9\n\n37.5\n41.3\n\n40.6\n43.6\n\n28.9\n13.5\n\n31.1\n28.2\n\n29.2\n25.1\n\n31.6\n30.1\n\n38.8\n53.0\n\n33.3\n35.9\n\n33.3\n33.6\n\n27.8\n26.3\n\n3.4\n20.0\n\n4.5\n7.7\n\n8.3\n16.2\n\n9.1\n13.4\n\nFigure 3: LLM-only and Task 3 solution auto-eval truthfulness (in percentage) across domain,\ndynamism, popularity, and question type.", "question": "What is the maximum accuracy of LLM-only solutions according to the text?", "answer": "<statement>The maximum accuracy of LLM-only solutions according to the text is 34%.</statement><cite>[S29]</cite>", "thinking": "Okay, let's see. The user is asking for the maximum accuracy of LLM-only solutions according to the text. I need to look through the provided supporting context to find where that information is mentioned.\n\nFirst, I'll scan through the paragraphs. The question is about LLM-only solutions, so I should focus on parts that discuss their performance. \n\nLooking at the chunk provided, there's a section starting with \"5.1 Straightforward RAG solutions\" and then a table labeled Table 5. In the text after the table, it says: \"LLM-only solutions has up to 34% accuracy and straightforward RAG solutions has up to 44% accuracy.\" That seems directly relevant. \n\nThe sentence is in the context of discussing the performance of different solutions. The exact sentence is in [S29]. So the maximum accuracy for LLM-only is 34%. I need to make sure there's no other mention of higher accuracy elsewhere. \n\nChecking other parts of the context, there's a mention of 32.3 and 33.5 in the table, but those are specific models. The general statement in [S29] says \"up to 34%\", which is the maximum. \n\nSo the answer should be 34%, cited from [S29]. The user's question is straightforward, and the answer is directly available in the text. No other citations are needed here."}
{"chunk": "Chunk:\n\n[S1] LLM-only\nsolutions has up to 34% accuracy and straightforward RAG solutions has up to 44% accuracy. [S2] The\nsubscript in \u201ctruthfulnessa\u201d denotes the result is reported by auto-eval. [S3] Model\n\nAccuracy Hallucination Missing Truthfulnessa\n\nLLM only\n\nTask 1\n\nTask 2\n\nTask 3\n\nLlama 3 70B Instruct\nGPT-4 Turbo\n\nLlama 3 70B Instruct\nGPT-4 Turbo\n\nLlama 3 70B Instruct\nGPT-4 Turbo\n\nLlama 3 70B Instruct\nGPT-4 Turbo\n\n32.3\n33.5\n\n35.6\n35.9\n\n37.5\n41.3\n\n40.6\n43.6\n\n28.9\n13.5\n\n31.1\n28.2\n\n29.2\n25.1\n\n31.6\n30.1\n\n38.8\n53.0\n\n33.3\n35.9\n\n33.3\n33.6\n\n27.8\n26.3\n\n3.4\n20.0\n\n4.5\n7.7\n\n8.3\n16.2\n\n9.1\n13.4\n\nFigure 3: LLM-only and Task 3 solution auto-eval truthfulness (in percentage) across domain,\ndynamism, popularity, and question type. [S4] Table 5 shows the average evaluation results from the two auto-evaluators (ChatGPT and Llama 3) and\nillustrates that the CRAG benchmark is non-trivial. [S5] First, the best LLM-only solutions (GPT-4 Turbo)\nobtained an accuracy of only 34%, with truthfulness of 20%, showing a big room for improvement. [S6] Second, straightforward RAG solutions obtained up to 44% accuracy, showing that extra information\ndoes help answer more questions reliably. [S7] Interestingly, none of the RAG solutions obtain truthfulness\nhigher than 20%; this is because all RAG solutions introduce more hallucinations generated from\nirrelevant retrieval results, showing a big challenge in RAG\u2014How to judiciously use retrieval results\nwithout being distracted by retrieval noises? [S8] Third, we found that Task 2 truthfulness scores are\nhigher than Task 1, showing that the KG knowledge helps improve accuracy, with a similar or even\nlower hallucination rate, because the KG knowledge is typically brief but precise. [S9] Unfortunately, the\nimprovement is mediocre, showing a second challenge in RAG\u2014How to best leverage the power of\nKG data? [S10] Finally, the truthfulness for Task 3 are also higher than Task 2, because of better search\nranking (recall that Task 1 and 2 provide five pages randomly selected from the top-10 search results)\nand better search recall. [S11] In particular, we found that the ground truths of over 30% of questions are\navailable in the web retrieval results but are not included in the prompt due to the context window\nlimitation. [S12] This shows the importance of search ranking in RAG. [S13] Figure 3 shows the auto-eval results across the domain, dynamism, popularity, and question type\ndimension. [S14] The results reveal a lot of interesting observations and show that the CRAG benchmark\nallows more insightful conclusions. [S15] First, it shows which slices of the benchmark are harder. [S16] For\nexample, we found much lower RAG truthfulness on the Finance and Sports domains, for real-\n\n8\n\nFinanceSportsMusicMovieOpen10010203040-4-131338-13619194040192623-109303135(a) DomainReal-timeFast-changingSlow-changingStatic100102030-1-7-148-15-149250-1524-5-81528(b) DynamismWebHeadTorsoTail05101520-16-101612110152111818171814(c) PopularitySimpleSimple w. [S17] ConditionSetComparisonAggregationMulti-hopPost-processingFalse Premise403020100102030141-2727-30105-132111-93314235-172513-10250622333151535162716-37(d) Question typeLlama 3 70B Instruct (LLM only)Llama 3 70B Instruct (LLM + web + KG)GPT-4 Turbo (LLM only)GPT-4 Turbo (LLM + web + KG)\fTable 6: Benchmarking CRAG questions with industry SOTA RAG systems. [S18] Perfect, acceptable\n(Acc.), hallucination (Hall.), missing rates (Miss.), and truthfulnessh reported by human-eval (Truthh)\nare in percentages. [S19] The best system achieves truthfulness of 51% and provides perfect answers for up\nto 63% of questions. [S20] System\n\nPerfect Acc. [S21] Hall. [S22] Miss. [S23] Truthh\n\nLatency (ms)\n\nEqual\nweighted Gemini Advanced\n\nCopilot Pro\n\nChatGPT Plus\nMeta SG\nPerplexity.ai\n\nTraffic\nweighted Gemini Advanced\n\nCopilot Pro\n\nChatGPT Plus\nMeta SG\nPerplexity.ai\n\n62.6\n60.8\n59.8\n52.5\n55.8\n\n70.0\n67.1\n61.8\n61.0\n63.7\n\n11.7\n10.1\n13.3\n9.7\n8.8\n\n9.5\n10.0\n11.4\n7.1\n6.3\n\n17.9\n16.6\n25.0\n16.0\n25.3\n\n14.3\n12.7\n25.7\n14.1\n20.9\n\n7.8\n12.5\n1.9\n21.8\n10.1\n\n6.1\n10.2\n1.3\n17.8\n9.1\n\n50.6\n49.3\n41.5\n41.4\n34.9\n\n60.5\n59.3\n41.8\n50.5\n45.9\n\n11,596\n5,246\n6,195\n3,431\n4,634\n\n-\n-\n-\n-\n-\n\ntime and fast-changing facts, for tail entities, and for complex questions requiring set answers,\npost-processing, and with false premises. [S24] Second, it shows where it is harder to leverage retrieval\nresults. [S25] Take the popularity slices as an example, we observed that GPT-4 Turbo\u2019s truthfulness\ndropped from head (21%) to torso (11%) to tail (8%), consistent with past observations [29]; however,\nthe straightforward RAG solution based on GPT-4 Turbo improved QA quality regarding torso\n(+7%) and tail entities (+6%) but lowered the quality regarding head (-4%). [S26] Finally, although\nour goal is not to compare different LLMs, the different dimensions allow us to understand the\nstrengths and weaknesses of each method. [S27] For example, although the RAG system based on Llama\n3 70B Instruct has a lower overall truthfulness score than the one based on GPT-4 Turbo, it has a\nsimilar or slightly higher truthfulness in answering simple and comparison questions, whereas much\nlower truthfulness in answering set and post-processing questions, suggesting investigations on the\nreasoning capabilities. [S28] 5.2 State-of-the-art industry solutions\n\nNext, we evaluated industry state-of-the-art (SOTA) RAG solutions on CRAG public test set. [S29] We\nselected five RAG systems built upon SOTA LLMs and search engines, queried them with CRAG\nquestions, collected the responses, and applied manual grading (details in Appendix A.4). [S30] In addition, we applied traffic weights to the questions to understand the solutions in real-world use\ncases. [S31] The traffic weights reflect the frequency of each question type, as defined in Table 2, in real\nQA traffic. [S32] We gave the same weights to all domains and reported the macro average across domains. [S33] This is because we have observed quite different domain-level distributions in different use cases, but\nhave been observing similar distributions at the query-type level.", "question": "What are the maximum accuracy rates for LLM-only solutions and straightforward RAG solutions according to the text?", "answer": "<statement>The maximum accuracy rates for LLM-only solutions is 34% and for straightforward RAG solutions is 44%.<cite>[S1][S5][S6]</cite></statement>", "thinking": "Okay, let's tackle this question. The user is asking for the maximum accuracy rates for LLM-only solutions and straightforward RAG solutions according to the text. \n\nFirst, I need to scan through the provided supporting context to find the relevant information. Let me start by looking for mentions of LLM-only and RAG solutions along with their accuracy rates.\n\nLooking at the first sentence in the chunk, [S1] says: \"LLM-only solutions has up to 34% accuracy and straightforward RAG solutions has up to 44% accuracy.\" That seems directly relevant. So that's a key point. \n\nBut I should check if there are other mentions elsewhere. For example, [S5] mentions \"the best LLM-only solutions (GPT-4 Turbo) obtained an accuracy of only 34%\". This supports the 34% figure from [S1]. Then [S6] states \"straightforward RAG solutions obtained up to 44% accuracy\", which again matches [S1]. \n\nSo both [S1], [S5], and [S6] mention these accuracy rates. However, the question is about the maximum accuracy rates. The text uses \"up to\" in [S1], which suggests that 34% and 44% are the maximums reported. \n\nI need to make sure there aren't higher numbers elsewhere. Scanning through the rest of the context, there's a mention of \"the best system achieves truthfulness of 51%\" in [S19], but that's about truthfulness, not accuracy. The accuracy numbers in the tables, like in Table 5 or 6, might have more details, but the user's question is about the maximum accuracy rates as per the text. \n\nThe user's question specifically asks for the maximum accuracy rates, so the answer should be 34% for LLM-only and 44% for RAG. The citations would be [S1], [S5], and [S6]. However, since each sentence in the response needs to have its own citations, I need to structure the answer accordingly. \n\nThe first sentence in the answer would be the direct quote from [S1], citing [S1]. Then, if there are other sentences, they would cite [S5] and [S6]. But since the user's answer might just need the two numbers, perhaps combining them into one statement. Wait, the response format requires each sentence to be in <statement> tags with citations. So if I can state both numbers in one sentence, that's efficient. \n\nSo the answer would be a single statement: \"The maximum accuracy rates for LLM-only solutions is 34% and for straightforward RAG solutions is 44%.\" Citing [S1], [S5], and [S6]. But according to the instructions, each sentence's citations are in the <cite> tags. So the statement would have all three citations. However, the user might want the most direct source. \n\nBut the user's instruction says to provide citations of the sentence number. Since [S1] directly states both numbers, and [S5] and [S6] support each part, maybe include all three. However, sometimes multiple citations can be listed. So the correct way is to have the statement with the answer and cite all relevant sentences. \n\nTherefore, the final answer would be a single statement citing [S1][S5][S6]. But I need to check if the system allows multiple citations. The example given in the user's instruction shows [S3][S8], so multiple citations are allowed. \n\nSo the answer is: <statement>The maximum accuracy rates for LLM-only solutions is 34% and for straightforward RAG solutions is 44%.<cite>[S1][S5][S6]</cite></statement>"}
{"chunk": "Chunk:\n\n[S1] The traffic weights reflect the frequency of each question type, as defined in Table 2, in real\nQA traffic. [S2] We gave the same weights to all domains and reported the macro average across domains. [S3] This is because we have observed quite different domain-level distributions in different use cases, but\nhave been observing similar distributions at the query-type level. [S4] Table 6 and Figure 4 show the overall performance of the SOTA systems and their performance\nacross different dimensions. [S5] The evaluation results confirm our belief that the CRAG benchmark\nreveals interesting insights and shows room for improvement for existing RAG solutions. [S6] First,\nthe results from SOTA solutions achieve much better truthfulness (highest 51%) compared to the\nstraightforward solutions. [S7] However, the hallucination rate ranges from 16% to 25%, so the answers\nare still not trustworthy. [S8] Note that the truthfulness scores between the SOTA solutions and the\nstraightforward solutions are not completely comparable, as they have different accesses to retrieval\ncontents (Appendix A.3 and A.4.1), and the former used auto-eval, while the latter used human-eval;\nhowever, the trend is valid. [S9] Second, we observed very different latency, ranging from 3.4s to 11.6s,\nreflecting the different design options in trading off latency and quality; for example, Copilot Pro\nhas the highest truthfulness, but meanwhile highest latency, whereas Meta SG [10] has mid-tier\ntruthfulness but lowest latency. [S10] (See Appendix A.4.2 for additional results and how we measured\nlatency.) Third, most difficult slices we see in the straightforward solutions remain to be difficult for\nSOTA solutions: real-time and fast-changing queries, and questions regarding torso and tail entities,\nshowing the improvement needed for handling retrieval noises when the system relies on retrieval\nresults to answer the question; as another example, we see lower truthfulness for queries requiring\naggregation, multi-hop reasoning or post-processing, showing the improvement space for reasoning\n\n9\n\n\fFigure 4: SOTA systems human-eval truthfulness scores (in percentage) across different dimensions. [S11] in question answering. [S12] Last, truthfulness on set and false premise questions improved significantly\nin the SOTA solutions compared to the straightforward solutions, showing advancement in RAG\nsystems in providing accurate and complete set answers and detecting false premises. [S13] 6 Conclusion\n\nThis paper proposes CRAG, a rich and comprehensive benchmark designed to advance research in\nretrieval-augmented generation (RAG). [S14] With detailed empirical studies, CRAG reviewed gaps in\nexisting RAG solutions and provided valuable insights for future improvement. [S15] We plan to continue\nimproving and expanding the benchmark for multi-lingual questions, multi-modal questions, multi-\nturn conversations, etc., to ensure CRAG stays at the forefront to push RAG research, adapts to\nemerging challenges, and evolves for new research needs. [S16] Acknowledgements\n\nWe would like to thank Jinsong Yu for his advice on the data strategy and help in connecting with the\npartner teams. [S17] We thank Alex Boesenberg for enabling us to create web search results. [S18] We thank\nSam Wexler for coordinating this project with various partners. [S19] We thank Hejia Zhang, Rares Bostan,\nEryk Helenowski, Nanshu Wang, Sinong Wang, and Denis Savenkov for the discussion regarding\nLLM and RAG evaluation. [S20] We thank Katie Manlove for coordinating with the budget and annotation\nneeds. [S21] We thank our annotation team for creating many great examples: David Vu, Florian Gawlitta,\nRani Salomi Pitta, Lauren Gregory Mikus, Tara Welch, Nidhi Modi, Ray De Leon, Jader Ricarte,\nJoshua Aranzaso. [S22] We thank Apoorva Srinivas and Courtnee Parker for coordinating the annotation\ntasks. [S23] We would like to acknowledge the support from Jackie Leader, Mindy Abern, Heather Nolan,\nTy Toledano, George Lan, Ben Edgar, Sy Choudhury, Rodrick Shepard, Katie Manlove, Mavis Hu,\nJen Vinz, Taha Masood, Parkin Kent, Rebekkah Hogan, Tony Nelli, Jennifer Pak, Jonathan Torres,\nand Amy Lee. [S24] Lei Chen\u2019s work is partially supported by National Key Research and Development Program of\nChina Grant No. [S25] 2023YFF0725100, National Science Foundation of China (NSFC) under Grant\nNo. [S26] U22B2060, the Hong Kong RGC GRF Project 16213620, RIF Project R6020-19, AOE Project\nAoE/E-603/18, Theme-based project TRS T41-603/20R, CRF Project C2004-21G, Guangdong\nProvince Science and Technology Plan Project 2023A0505030011, Hong Kong ITC ITF grants\nMHX/078/21 and PRP/004/22FX, Zhujiang scholar program 2021JC02X170, Microsoft Research\nAsia Collaborative Research Grant, HKUST-Webank joint research lab and HKUST(GZ)-Chuanglin\nGraph Data Joint Lab. [S27] 10\n\nFinanceSportsMusicMovieOpen01020304050607080134557687419346757784246057701231515662431523662(a) DomainReal-timeFast-changingSlow-changingStatic100102030405060275665-3204963-7-551548154750-623946(b) DynamismWebHeadTorsoTail01020304050605948333960453227534419114843312549231215(c) PopularitySimpleSimple w. [S28] ConditionSetComparisonAggregationMulti-hopPost-processingFalse Premise010203040506070575168504034464054495944233836724430625731402365232554121395464029612918202141(d) Question typeCopilot ProGemini AdvancedChatGPT PlusMeta SGPerplexity.ai\fReferences\n\n[1] J. [S29] Achiam, S. [S30] Adler, S. [S31] Agarwal, L. [S32] Ahmad, I. [S33] Akkaya, F. [S34] L. [S35] Aleman, D. [S36] Almeida,\nJ. [S37] Altenschmidt, S. [S38] Altman, S. [S39] Anadkat, et al. [S40] GPT-4 technical report. [S41] arXiv preprint\narXiv:2303.08774, 2023. [S42] [2] AI@Meta. [S43] Llama 3 model card. [S44] 2024. [S45] [3] E. [S46] Almazrouei, H. [S47] Alobeidli, A. [S48] Alshamsi, A. [S49] Cappelli, R. [S50] Cojocaru, M. [S51] Debbah, \u00c9. [S52] Goffinet,\nD. [S53] Hesslow, J. [S54] Launay, Q. [S55] Malartic, et al. [S56] The falcon series of open language models. [S57] arXiv\npreprint arXiv:2311.16867, 2023. [S58] [4] P. [S59] Bajaj, D. [S60] Campos, N. [S61] Craswell, L. [S62] Deng, J. [S63] Gao, X. [S64] Liu, R. [S65] Majumder, A. [S66] McNamara,\nB. [S67] Mitra, T. [S68] Nguyen, M. [S69] Rosenberg, X. [S70] Song, A. [S71] Stoica, S. [S72] Tiwary, and T. [S73] Wang. [S74] MS MARCO:\nA human generated machine reading comprehension dataset, 2018. [S75] [5] Brave Software. [S76] Brave Search API.", "question": "What is the highest truthfulness score achieved by SOTA solutions according to the text?", "answer": "<statement>The highest truthfulness score achieved by SOTA solutions is 51%, as reported in the text.<cite>[S6]</cite></statement>", "thinking": "Okay, let's see. The user is asking for the highest truthfulness score achieved by SOTA solutions according to the text. I need to look through the provided supporting context to find the answer.\n\nFirst, I'll scan the passage for mentions of SOTA solutions and their truthfulness scores. Let's go through each sentence:\n\n[S6] says \"the results from SOTA solutions achieve much better truthfulness (highest 51%) compared to the straightforward solutions.\" That seems like a direct mention of 51% as the highest score. \n\nThen [S9] mentions Copilot Pro has the highest truthfulness but doesn't specify the percentage. However, since [S6] already states 51%, that's probably the key point. \n\nI should check if there's any other sentence with a higher score. Looking through the rest, [S12] talks about improvements but doesn't mention a specific number. The rest discuss other metrics like latency or different aspects, but not the highest score. \n\nSo the answer is 51%, cited from [S6]. I need to make sure there's no other higher value mentioned elsewhere. Scanning again, no, [S6] is the only one with a specific percentage. Therefore, the highest truthfulness score is 51% as per the text."}
{"chunk": "Chunk:\n\n[S1] Yang. [S2] Multihop-rag: Benchmarking retrieval-augmented generation for multi-\n\nhop queries. [S3] arXiv preprint arXiv:2401.15391, 2024. [S4] [34] H. [S5] Touvron, L. [S6] Martin, K. [S7] Stone, P. [S8] Albert, A. [S9] Almahairi, Y. [S10] Babaei, N. [S11] Bashlykov, S. [S12] Batra,\nP. [S13] Bhargava, S. [S14] Bhosale, D. [S15] Bikel, L. [S16] Blecher, C. [S17] C. [S18] Ferrer, M. [S19] Chen, G. [S20] Cucurull, D. [S21] Esiobu,\nJ. [S22] Fernandes, J. [S23] Fu, W. [S24] Fu, B. [S25] Fuller, C. [S26] Gao, V. [S27] Goswami, N. [S28] Goyal, A. [S29] Hartshorn, S. [S30] Hosseini,\nR. [S31] Hou, H. [S32] Inan, M. [S33] Kardas, V. [S34] Kerkez, M. [S35] Khabsa, I. [S36] Kloumann, A. [S37] Korenev, P. [S38] S. [S39] Koura, M.-A. [S40] Lachaux, T. [S41] Lavril, J. [S42] Lee, D. [S43] Liskovich, Y. [S44] Lu, Y. [S45] Mao, X. [S46] Martinet, T. [S47] Mihaylov, P. [S48] Mishra,\nI. [S49] Molybog, Y. [S50] Nie, A. [S51] Poulton, J. [S52] Reizenstein, R. [S53] Rungta, K. [S54] Saladi, A. [S55] Schelten, R. [S56] Silva, E. [S57] M. [S58] Smith, R. [S59] Subramanian, X. [S60] E. [S61] Tan, B. [S62] Tang, R. [S63] Taylor, A. [S64] Williams, J. [S65] X. [S66] Kuan, P. [S67] Xu, Z. [S68] Yan,\nI. [S69] Zarov, Y. [S70] Zhang, A. [S71] Fan, M. [S72] Kambadur, S. [S73] Narang, A. [S74] Rodriguez, R. [S75] Stojnic, S. [S76] Edunov, and\nT. [S77] Scialom. [S78] Llama 2: Open foundation and fine-tuned chat models, 2023. [S79] [35] R. [S80] Usbeck, X. [S81] Yan, A. [S82] Perevalov, L. [S83] Jiang, J. [S84] Schulz, A. [S85] Kraft, C. [S86] M\u00f6ller, J. [S87] Huang, J. [S88] Reineke,\nA.-C. [S89] Ngonga Ngomo, et al. [S90] QALD-10\u2013the 10th challenge on question answering over linked\ndata. [S91] Semantic Web, (Preprint):1\u201315, 2023. [S92] [36] T. [S93] Vu, M. [S94] Iyyer, X. [S95] Wang, N. [S96] Constant, J. [S97] Wei, J. [S98] Wei, C. [S99] Tar, Y.-H. [S100] Sung, D. [S101] Zhou, Q. [S102] Le, and\nT. [S103] Luong. [S104] FreshLLMs: Refreshing large language models with search engine augmentation,\n2023. [S105] [37] F. [S106] Xu, Y. [S107] Song, M. [S108] Iyyer, and E. [S109] Choi. [S110] A critical evaluation of evaluations for long-form\n\nquestion answering. [S111] In Association of Computational Linguistics, 2023. [S112] [38] M. [S113] Yasunaga, H. [S114] Ren, A. [S115] Bosselut, P. [S116] Liang, and J. [S117] Leskovec. [S118] QA-GNN: Reasoning with\nlanguage models and knowledge graphs for question answering. [S119] Association for Computational\nLinguistics, 2021. [S120] [39] Y. [S121] Zhu, S. [S122] Du, B. [S123] Li, Y. [S124] Luo, and N. [S125] Tang. [S126] Are large language models good statisticians? [S127] In\n\nNeurIPS, 2024. [S128] 12\n\n\fA Appendix\n\nA.1 Dataset\n\nA.1.1 Constructing QA pairs from KGs\n\nWe first collected a set of entities based on publicly available data. [S129] Then we created question-answer\npairs in three steps for Simple static and dynamic questions. [S130] Step 1. [S131] For each domain, we first selected an entity type and a meaningful relation pe, rq and created\na question template. [S132] For example, for (music artist, first album), we create a template \u201cwhat is the\nfirst album of [music artist]?\u201d. [S133] Step 2. [S134] We then sampled entities from the KGs to fill in the templates and generate the full question. [S135] We adopted the method described in [29] and sampled entities of top, middle, and bottom popularity. [S136] We defined popularity based on heuristics for each entity type and created an equal number of\nquestions for each bucket. [S137] Step 3. [S138] Last, we took the associated attribute values as the answer to the question to create question-\nanswer pairs. [S139] We created the Comparison, Aggregation, Set, Post-processing, and False-premise questions in a\nsimilar way but 1) made sure the template allows for crisp and deterministic answers and 2) sampled\nthe subject entities that fit the question. [S140] We used heuristics to select entity types for these question\ncategories. [S141] Finally, we created multi-hop questions in three steps, similar to those described in [31]. [S142] We first\nsampled an entity e1 from the KG and selected two relation triplets following a two-hop path:\npe1, r1, e2q and pe1, r2, e3q. [S143] We then created a question template describing the path. [S144] For example,\nfor path (company1, is_parent, company2) followed by (company1, ceo, person), we created the\ntemplate \"who is the CEO of the parent company of [company2]?\". [S145] The answer to the new question\nwill be e3 in the second triplet. [S146] A.1.2 Definition of dynamism categories\n\nTable 7: Definition of dynamism categories. [S147] Dynamism\n\nDefinition\n\nReal-time\n\nThe answer to the question changes over seconds\n(e.g., \u201cWhat\u2019s Costco\u2019s stock price today?\u201d). [S148] Fast-changing\n\nThe answer to the question changes no more than daily\n(e.g., \u201cWhen is Laker\u2019s game tonight?\u201d). [S149] Slow-changing\n\nThe answer to the question changes no more than yearly\n(e.g., \u201cWho won the Grammy award last year?\u201d). [S150] Static\n\nThe answer to the question does not change over time,\nsuch as the birth date of a person. [S151] A.1.3 Constructing QA pairs from web contents\n\nStep 1. [S152] Ask annotators to write down a list of questions that could possibly be answered by web\nsearch based on a general guideline (e.g., \u201cwhat is the most popular action movie in 2023?\u201d). [S153] Step 2. [S154] Generate the web search results to answer the question. [S155] Step 3. [S156] Finally, annotators reviewed the web search results to determine the ground truth answers to\nthe questions: 1) If the search results successfully provided the necessary information, annotators\nrecorded the ground truth answer text and the URL associated with it based on the retrieved content. [S157] Note that the answer is determined by the query_time at which the web search happened, especially\nfor the Fast-changing and Real-time questions. [S158] 2) Otherwise, annotators conducted further web\nsearches to document the correct answers. [S159] 13\n\n\fBesides the QA pairs, the annotators will also provide labels for the domain, dynamism, question\ntypes, and an answer URL (a URL that contains the answer to the question) for Web Questions. [S160] A.1.4 Validation for the QA pairs\n\nWe conducted two phases of dataset validation with our in-house Linguist team. [S161] Phase 1. [S162] Question and meta-label validation. [S163] After the initial round of QA pair generation, an\naudit session was conducted, where expert annotators reviewed the question template, questions,\nand meta-labels (domain, question type, etc), applying edits as necessary with 2x human review\n(agreement rate 90%`). [S164] All problematic questions (e.g., a wrong false-premise question) were\nrevised, and all conflicting labels were resolved by a third more experienced auditor.", "question": "What is the definition of 'Static' in the context of dynamism categories?", "answer": "<statement>The answer to the question does not change over time, such as the birth date of a person.<cite>[S151]</cite></statement>", "thinking": "Okay, let's tackle this question. The user is asking for the definition of 'Static' in the context of dynamism categories. I need to look through the provided supporting context to find where 'Static' is defined.\n\nFirst, I'll scan the document for mentions of 'Static'. The appendix section seems relevant. Looking at A.1.2, there's a table titled \"Definition of dynamism categories\". In that table, under the 'Static' row, the definition is given. \n\nThe specific sentence is: \"The answer to the question does not change over time, such as the birth date of a person.\" This is cited as [S151]. \n\nI need to make sure there's no other mention of 'Static' elsewhere, but from the context provided, this seems to be the only definition. The answer should reference this sentence. The user wants the answer in the specified format with citations. So the statement would be the definition sentence with the citation [S151]."}
{"chunk": "Chunk:\n\n[S1] Question and meta-label validation. [S2] After the initial round of QA pair generation, an\naudit session was conducted, where expert annotators reviewed the question template, questions,\nand meta-labels (domain, question type, etc), applying edits as necessary with 2x human review\n(agreement rate 90%`). [S3] All problematic questions (e.g., a wrong false-premise question) were\nrevised, and all conflicting labels were resolved by a third more experienced auditor. [S4] Phase 2. [S5] Answer validation. [S6] To ensure the answers in the benchmark are correct, we further\nconducted an auditing process for all the answers. [S7] For the web questions, an annotation team\nreviewed each question and conducted an extensive search to make sure the answer is factually\ncorrect and includes comprehensive information (such as for set questions) with 2x human review\n(agreement rate 90%`). [S8] A third more experienced auditor then reviewed all conflicting answers and\nprovided a resolution. [S9] For the KG questions, a team of five engineers carefully checked the questions\nand queried the mock APIs manually to validate the answers. [S10] This step resulted in a 5% answer\ncorrection. [S11] In both phases, we paid special attention to examples where the straightforward solutions output\ndifferent answers from the ground truth answers and asked the auditing team to double-check those\nexamples. [S12] This step yielded an additional 2% answer updates. [S13] A.1.5 An example of retrieved web search results\n\nKey\n\n\"page name\"\n\"page url\"\n\n\"page snippet\"\n\n\"page last modified\"\n\"html page\"\n\nTable 8: An example of web search results. [S14] Value\n\n\"A Short History Of ChatGPT: How We Got To Where We Are Today\"\n\"https://www.forbes.com/sites/bernardmarr/2023/05/19/a-short-history-of-chatgpt-\nhow...\"\n\"OpenAI\n2022</strong>...\"\n\"2024-1-18 15:32:24\"\n\"<!DOCTYPE html><html\nhref=\"https...\"\n\nreleased an early demo of ChatGPT on <strong>November 30,\n\nlang=\"en\"><head><link rel=\"preload\" as=\"font\"\n\nA.1.6 The mock data and mock APIs\n\nCRAG provides mock APIs to simulate retrieval from web, KG, and real-time APIs in the real\nretrieval environment, allowing accessible facilitating data and fair comparison. [S15] CRAG provides both structured (through mock KGs) and unstructured (web search results) informa-\ntion to test the effectiveness of RAG systems in leveraging a diverse range of available information. [S16] First, for each question in the benchmark, CRAG provides up to 50 web search results from a real-\nworld search engine\u2014the Brave Search API [5]. [S17] Different from existing benchmarks that use snippets\nor selected text chunks [4, 6], CRAG provides full HTML pages, containing more information and\npotentially more noises as in a realistic setting. [S18] Second, CRAG provides mock KG search APIs to test\nstructured search for RAG. [S19] The mock KGs, though much smaller in size, contain both information\nnecessary to answer a subset of questions in the benchmark and noises that have similar entity or\nattribute names, again simulating real settings. [S20] Our mock KGs contain about 2.6M entities and have\na signal-to-noise ratio of less than 1/30. [S21] 14\n\n\fTable 9: Mock APIs and Descriptions. [S22] APIs\n\nDescriptions\n\nopen_search_entity_by_name(query: str) -> dict\nopen_get_entity(entity: str) -> dict\n\nmovie_get_person_info(person_name: str) -> dict\nmovie_get_movie_info(movie_name: str) -> dict\nmovie_get_year_info(year: str) -> dict\n\nmovie_get_movie_info_by_id(movie_id: int) -> dict\nmovie_get_person_info_by_id(person_id: int) -> dict\n\nfinance_get_company_name(query: str) -> dict\nfinance_get_ticker_by_name(query: str) -> dict\nfinance_get_price_history(ticker_name: str) -> dict\nfinance_get_detailed_price_history(ticker_name: str) -> dict\nfinance_get_dividends_history(ticker_name: str) -> dict\nfinance_get_market_capitalization(ticker_name: str) -> dict\nfinance_get_eps(ticker_name: str) -> dict\nfinance_get_pe_ratio(ticker_name: str) -> dict\nfinance_get_info(ticker_name: str) -> dict\n\nmusic_search_artist_entity_by_name(artist_name: str) -> dict\nmusic_search_song_entity_by_name(song_name: str) -> dict\nmusic_get_billboard_rank_date(rank: int, date: str = None) -> dict\nmusic_get_billboard_attributes(date: str, attribute: str, song_name: str) -> dict\nmusic_grammy_get_best_artist_by_year(year: int) -> dict\nmusic_grammy_get_award_count_by_artist(artist_name: str) -> dict\nmusic_grammy_get_award_count_by_song(song_name: str) -> dict\nmusic_grammy_get_best_song_by_year(year: int) -> dict\nmusic_grammy_get_award_date_by_artist(artist_name: str) -> dict\nmusic_grammy_get_best_album_by_year(year: int) -> dict\nmusic_grammy_get_all_awarded_artists() -> dict\nmusic_get_artist_birth_place(artist_name: str) -> dict\nmusic_get_artist_birth_date(artist_name: str) -> dict\nmusic_get_members(band_name: str) -> dict\nmusic_get_lifespan(artist_name: str) -> dict\nmusic_get_song_author(song_name: str) -> dict\nmusic_get_song_release_country(song_name: str) -> dict\nmusic_get_song_release_date(song_name: str) -> dict\nmusic_get_artist_all_works(artist_name: str) -> dict\n\nSearch for entities by name in the Open domain. [S23] Retrieve detailed information about an entity in the\nOpen domain. [S24] Get information about a person related to movies. [S25] Get information about a movie. [S26] Get information about movies released in a specific\nyear. [S27] Get movie information by its unique ID. [S28] Get person information by their unique ID. [S29] Search for company names in the finance domain. [S30] Retrieve the ticker symbol for a given company name. [S31] Get the price history for a given ticker symbol. [S32] Get detailed price history for a ticker symbol. [S33] Get dividend history for a ticker symbol. [S34] Retrieve market capitalization for a ticker symbol. [S35] Get earnings per share (EPS) for a ticker symbol. [S36] Get the price-to-earnings (PE) ratio for a ticker symbol. [S37] Get financial information for a ticker symbol.", "question": "What process was used to validate the answers for web questions in the benchmark?", "answer": "<statement>Answer validation was conducted to ensure the correctness of answers in the benchmark.<cite>[S5][S6]</cite></statement> <statement>For web questions, an annotation team reviewed each question and conducted an extensive search to verify factual correctness and comprehensive information with 2x human review (agreement rate 90%).<cite>[S7]</cite></statement> <statement>A third more experienced auditor reviewed conflicting answers and provided resolutions.<cite>[S8]</cite></statement> <statement>The auditing process included double-checking examples where straightforward solutions differed from ground truth answers.<cite>[S11]</cite></statement>", "thinking": "Okay, let's tackle this question. The user is asking about the process used to validate the answers for web questions in the benchmark. I need to look through the provided supporting context to find the relevant information.\n\nFirst, I'll scan the passage for keywords like \"validate,\" \"answers,\" \"web questions,\" \"benchmark,\" and \"process.\" Let's go through each sentence step by step.\n\nLooking at the sentences:\n\n[S1] Talks about question and meta-label validation, but not specifically answers.\n[S2] Mentions an audit session for questions and meta-labels, but again, not answers.\n[S3] Discusses revising problematic questions and resolving labels, still not answers.\n[S4] Phase 2. Not helpful.\n[S5] Answer validation. This seems relevant. The sentence says \"Answer validation.\" So this is a key point.\n[S6] States that an auditing process was conducted for all answers. This is directly about answer validation.\n[S7] Specifically mentions web questions: \"For the web questions, an annotation team reviewed each question and conducted an extensive search to make sure the answer is factually correct...\" This is a direct answer. It also mentions 2x human review with 90% agreement.\n[S8] Talks about a third auditor reviewing conflicting answers. Also relevant.\n[S9] About KG questions, not web.\n[S10] Answer correction rate, but not the process.\n[S11] Mentions checking examples where answers differ from ground truth. Part of the process.\n[S12] Additional answer updates. Also part of the process.\n[S13] Example of web search results. Not directly about validation process.\n\nSo the main sentences are S5, S6, S7, S8, S11, S12. But the question is about the process used. The answer would combine these points. However, the user wants each sentence in the response with citations. So I need to structure the answer with the relevant sentences.\n\nThe answer should mention the auditing process for answers, the annotation team's review, extensive search for factual correctness, 2x human review, third auditor for conflicts, and checking examples with differing answers. Each of these points is in different sentences. So the statements would be:\n\n- \"Answer validation.\" [S5]\n- \"To ensure the answers in the benchmark are correct, we further conducted an auditing process for all the answers.\" [S6]\n- \"For the web questions, an annotation team reviewed each question and conducted an extensive search to make sure the answer is factually correct...\" [S7]\n- \"A third more experienced auditor then reviewed all conflicting answers and provided a resolution.\" [S8]\n- \"In both phases, we paid special attention to examples where the straightforward solutions output different answers from the ground truth answers and asked the auditing team to double-check those examples.\" [S11]\n- \"This step yielded an additional 2% answer updates.\" [S12]\n\nBut the user wants the answer to be in the format where each sentence is a <statement> with citations. So each of these points would be separate statements. However, the answer should be concise. Let me check if all these sentences are necessary.\n\nThe question is about the process, so the key steps are the auditing process (S6), the annotation team's review (S7), the third auditor (S8), and the attention to examples with differing answers (S11). The 2x review and agreement rate are in S7. The answer correction steps are in S10 and S12, but maybe not necessary unless they are part of the process.\n\nSo the main sentences would be S5, S6, S7, S8, S11. Each of these would be separate statements with their citations. The answer would be a combination of these sentences. Let me structure that."}
{"chunk": "Chunk:\n\n[S1] Get earnings per share (EPS) for a ticker symbol. [S2] Get the price-to-earnings (PE) ratio for a ticker symbol. [S3] Get financial information for a ticker symbol. [S4] Search for music artists by name. [S5] Search for songs by name. [S6] Get Billboard ranking for a specific rank and date. [S7] Get attributes of a song from Billboard rankings. [S8] Get the Grammy Best New Artist for a specific year. [S9] Get the total Grammy awards won by an artist. [S10] Get the total Grammy awards won by a song. [S11] Get the Grammy Song of the Year for a specific year. [S12] Get the years an artist won a Grammy award. [S13] Get the Grammy Album of the Year for a specific year. [S14] Get all artists awarded the Grammy Best New Artist. [S15] Get the birthplace of an artist. [S16] Get the birth date of an artist. [S17] Get the member list of a band. [S18] Get the lifespan of an artist. [S19] Get the author of a song. [S20] Get the release country of a song. [S21] Get the release date of a song. [S22] Get all works by an artist. [S23] sports_soccer_get_games_on_date(team_name: str, date: str) -> dict\nsports_nba_get_games_on_date(team_name: str, date: str) -> dict\nsports_nba_get_play_by_play_data_by_game_ids(game_ids: List[str]) -> dict\n\nGet soccer games on a specific date. [S24] Get NBA games on a specific date. [S25] Get NBA play by play data for a set of game ids. [S26] A.2 Evaluation\n\nA.2.1 Human evaluation\n\nWe run human evaluation to score each answer with respect to the metrics defined in Section 4.1. [S27] We score each perfect, acceptable, missing, or incorrect answer with a score sp, sa, sm, and sin,\nrespectively and define truthfulnessh as the score of the answer by setting sp \u201c 1, sa \u201c 0.5, sm \u201c 0,\nand sin \u201c \u00b41. [S28] We then compute the average truthfulness for all examples in the evaluation set as the\ntruthfulness score for the RAG solution. [S29] Human-eval instructions. [S30] The human-eval instructions are as follows. [S31] Given a query, a query day and time at which the query was made, the chatbot\u2019s response, grade the\naccuracy for the response according to the criteria below:\nUsing an external search engine, please evaluate the factual accuracy of the response based on the\ngrading rubric below. [S32] An accurate answer should be factually correct and provide useful information\nto answer the user\u2019s question. [S33] \u2022 Accuracy = 0 (Missing). [S34] It covers the following situations. [S35] There is no response. [S36] There is a\nfailure to provide a response to the request (e.g. [S37] \u201cI\u2019m sorry . [S38] . [S39] . [S40] . [S41] . [S42] . [S43] , I can\u2019t do . [S44] . [S45] . [S46] \u201d) due to\ninability. [S47] E.g., Query: \u201cLatest news about the Nobel prize today.\u201d Response: \u201cI can\u2019t find\nspecific information regarding the Nobel prize . [S48] . [S49] . [S50] \u201d The response fails to answer and asks\nfollow-up questions. [S51] \u2022 Accuracy = 1 (Incorrect). [S52] It covers the following situations. [S53] The answer is unintelligible. [S54] The answer is poorly formed. [S55] The answer contains a major hallucination (e.g. [S56] wrong date,\n\n15\n\n\fTable 10: Accuracy and F1 for the ChatGPT and Llama 3 auto-evaluation models. [S57] Accuracy\n\nPrecision\n\nRecall\n\nF1 score\n\nChatGPT\n\nLlama 3\n\nChatGPT\n\nLlama 3\n\nChatGPT\n\nLlama 3\n\nChatGPT\n\nLlama 3\n\nAccurate\nIncorrect\nMissing\n\nAverage\n\n94.1\n94.1\n100.0\n\n96.1\n\n98.6\n98.6\n100.0\n\n99.1\n\n98.8\n86.8\n100.0\n\n95.2\n\n98.5\n98.7\n100.0\n\n99.1\n\n92.2\n97.8\n100.0\n\n96.7\n\n99.3\n97.2\n100.0\n\n98.8\n\n92.0\n92.0\n100.0\n\n94.7\n\n98.9\n97.9\n100.0\n\n98.9\n\nwrong numbers, or other significant factual errors). [S58] The answer is irrelevant to the user\u2019s\nrequest. [S59] Answers in a category, location, or time window that is significantly different from\nthe user\u2019s request, if any. [S60] There is a significant structural/formatting error. [S61] The response is\notherwise a total structural/functional failure and does not contain sufficient well-formed\ncontent that can be used to determine accuracy\n\n\u2022 Accuracy = 2 (Acceptable). [S62] It covers the following situations. [S63] The answer is acceptably\ncorrect and relevant to the user\u2019s request, but may miss some information, i.e. [S64] accurate but\nnot complete, or mostly accurate with minor issues. [S65] The answer may contain some minor\nhallucination that doesn\u2019t significantly alter the overall meaning. [S66] \u201cMinor hallucination\u201d\nmeans the answer addressed the user\u2019s question but might be off on some additional details. [S67] The rule of thumb is to see if the answer serves the purpose of the user\u2019s question, and\nwhether the hallucination could mislead the users on what they were asking. [S68] \u2022 Accuracy = 3 (Accurate). [S69] The answer is factually correct, contains all the relevant informa-\ntion requested, responds appropriately to the query, and does not contain any hallucination. [S70] We requested two human graders to grade each question (agreement rate 94%), and when there is a\nconflict, a third more experienced grader will resolve it. [S71] A.2.2 Automatic evaluation\n\nIn auto-eval, we merge perfect and acceptable as accurate and consider only three scores: 1 for\naccurate, 0 for missing, and -1 for incorrect. [S72] The truthfulnessa is calculated by the average\ntruthfulness for all the examples in the evaluation set, and is effectively\n\naccuracy \u00b4 hallucination,\n\nwhere accuracy, hallucination, and missing are the percentage of accurate, incorrect, and missing\nanswers in the test set. [S73] These score choices penalize incorrect answers, award correct, and assign a\nvalue of 0 to missing answers. [S74] Auto-evaluators. [S75] We computed the accuracy and F1 for the two auto-evaluators for the accurate,\nincorrect, and missing examples in the public test set, respectively. [S76] Here, we considered human-eval\nlabels as the ground truth. [S77] Table 10 shows both models attain reasonable accuracy and F1 scores as\nan evaluator compared to human evaluation. [S78] If the model prediction matches any provided answers from the Ground Truth Answer list,", "question": "What are the accuracy scores for ChatGPT and Llama 3 according to Table 10?", "answer": "<statement>The accuracy scores for ChatGPT and Llama 3 are 94.1 and 96.1, respectively, according to Table 10.<cite>[S57]</cite></statement>", "thinking": "Okay, let's tackle this question. The user is asking for the accuracy scores of ChatGPT and Llama 3 according to Table 10. First, I need to look through the provided supporting context to find where Table 10 is mentioned.\n\nLooking at the chunks, there's a mention of \"Table 10: Accuracy and F1 for the ChatGPT and Llama 3 auto-evaluation models.\" Then, in the following lines, there's a table with rows for Accuracy, Precision, Recall, F1 score, etc. The rows for ChatGPT and Llama 3 under Accuracy are listed. \n\nThe Accuracy row for ChatGPT is 94.1, and for Llama 3 it's 96.1. The user specifically asked for accuracy scores, so those numbers are the ones to report. The citations here would be from the sentence where Table 10 is introduced and the actual data points. \n\nI need to check the sentence numbers. The table is mentioned in [S57], and the specific accuracy values are in the same chunk. However, the exact numbers are in the table rows. Since the table is part of the context, the citations would be [S57] for the table's existence and the specific rows. But looking at the context, the table's data is presented in the same chunk as [S57], so the citations for the accuracy scores would be [S57]. \n\nWait, the user might need the exact sentence numbers where the accuracy scores are mentioned. The table is in [S57], but the actual numbers are in the table's rows. However, the supporting context provided doesn't have separate sentences for each table entry. The table is presented as a block, so the entire table is under [S57]. Therefore, the accuracy scores for ChatGPT and Llama 3 are cited from [S57]."}
{"chunk": "Chunk:\n\n[S1] Here, we considered human-eval\nlabels as the ground truth. [S2] Table 10 shows both models attain reasonable accuracy and F1 scores as\nan evaluator compared to human evaluation. [S3] If the model prediction matches any provided answers from the Ground Truth Answer list,\n\nAuto-eval prompt. [S4] The prompt we used in the auto-eval is similar to the following. [S5] We did not\nrelease the exact prompt used in the challenge to avoid prompt attack. [S6] PROMPT = \"\"\"# Task: You are given a Question, a model Prediction, and a list of Ground Truth\nanswers, judge whether the model Prediction matches any answer from the list of Ground Truth\nanswers. [S7] Follow the instructions step by step to make a judgement. [S8] 1. [S9] \"Accuracy\" should be \"True\"; otherwise, \"Accuracy\" should be \"False\". [S10] 2. [S11] If the model prediction says that it couldn\u2019t answer the question or it doesn\u2019t have enough\ninformation, \"Accuracy\" should always be \"False\". [S12] 3. [S13] If the Ground Truth is \"invalid question\", \"Accuracy\" is \"True\" only if the model prediction is\nexactly \"invalid question\". [S14] # Output:\nRespond with only a single JSON string with an \"Accuracy\" field which is \"True\" or \"False\". [S15] # Examples:\nQuestion: how many seconds is 3 minutes 15 seconds? [S16] Ground truth: [\"195 seconds\"]\n\n16\n\n\fPrediction: 3 minutes 15 seconds is 195 seconds. [S17] Accuracy: True\nQuestion: Who authored The Taming of the Shrew (published in 2002)? [S18] Ground truth: [\"William Shakespeare\", \"Roma Gill\"]\nPrediction: The author to The Taming of the Shrew is Roma Shakespeare. [S19] Accuracy: False\nQuestion: Who played Sheldon in Big Bang Theory? [S20] Ground truth: [\"Jim Parsons\", \"Iain Armitage\"]\nPrediction: I am sorry I don\u2019t know. [S21] Accuracy: False\n\"\"\"\n\nA.2.3 KDD Cup 2024 Meta CRAG challenge\n\nThe KDD Cup 2024 Meta CRAG challenge has two stages. [S22] Stage 1 is designed for the participants to\ndevelop their RAG solutions by submitting their systems against the leaderboard, whereas Stage 2\ndetermines the final winners. [S23] We split our benchmark data into three sets with similar distributions:\nvalidation, public test, and private test at 30%, 30%, and 40%, respectively. [S24] We shared the validation\nand public test sets, in total, 2,706 examples in Stage 1, and held out the private test set to select the\nfinal winners in Stage 2. [S25] We used auto-eval for Stage 1, and selected top teams with auto-eval in\nStage 2 to conduct manual evaluation. [S26] A.3 Evaluating straightforward RAG solutions\n\nWe send each CRAG question in a prompt shown below. [S27] This prompt is designed to include the\noriginal Query Time for the question and ask the LLM to answer the question based on the query\ntime and the retrieved result. [S28] Note that the retrieved result was also from the same query time and\nwas provided in CRAG. [S29] Moreover, this prompt encourages brief answers and \u201cI don\u2019t know\u201d answers\nwhen confidence is low. [S30] A.3.1 Prompts used in straightforward RAG solutions\n\nVanilla LLM. [S31] PROMPT = \"\"\" You are given a Question and the time when it was asked in the\nPacific Time Zone (PT), referred to as \"Query Time\". [S32] The query time is formatted as \"mm/dd/yyyy,\nhh:mm:ss PT\". [S33] Your task is to answer the question in as few words as possible. [S34] Please follow these guidelines when formulating your answer:\n1. [S35] If the question contains a false premise or assumption, answer \u201cinvalid question\u201d. [S36] 2. [S37] If you are uncertain or don\u2019t know the answer, respond with \u201cI don\u2019t know\u201d. [S38] ### Question\n{query}\n### Query Time\n{query_time}\n### Answer\n\"\"\"\n\nRAG with web search results (Task 1). [S39] PROMPT = \"\"\" You are given a Question, References and\nthe time when it was asked in the Pacific Time Zone (PT), referred to as \"Query Time\". [S40] The query\ntime is formatted as \"mm/dd/yyyy, hh:mm:ss PT\". [S41] The references may or may not help answer the\nquestion. [S42] Your task is to answer the question in as few words as possible. [S43] Please follow these guidelines when formulating your answer:\n1. [S44] If the question contains a false premise or assumption, answer \u201cinvalid question\u201d. [S45] 2. [S46] If you are uncertain or don\u2019t know the answer, respond with \u201cI don\u2019t know\u201d. [S47] ### Question\n{query}\n### Query Time\n{query_time}\n### References\n{references}\n\n17\n\n\f### Answer\n\"\"\"\n\nRAG with KG and web search results (Tasks 2 and 3). [S48] PROMPT = \"\"\" You are given a Question,\nReferences and the time when it was asked in the Pacific Time Zone (PT), referred to as \"Query\nTime\". [S49] The query time is formatted as \"mm/dd/yyyy, hh:mm:ss PT\". [S50] The references may or may not\nhelp answer the question. [S51] Your task is to answer the question in as few words as possible. [S52] Please follow these guidelines when formulating your answer:\n1. [S53] If the question contains a false premise or assumption, answer \u201cinvalid question\u201d. [S54] 2. [S55] If you are uncertain or don\u2019t know the answer, respond with \u201cI don\u2019t know\u201d. [S56] ### Question\n{query}\n### Query Time\n{query_time}\n### References\n# web\n{web_results}\n# knowledge graph\n{kg_response}\n### Answer\n\"\"\"\n\nQuery entity extraction. [S57] PROMPT = \"\"\" You are an agent that only outputs JSON. [S58] You are given a\nQuery and Query Time. [S59] Do the following:\n\n1) Determine the domain the query is about. [S60] The domain should be one of the following:\n\"finance\", \"sports\", \"music\", \"movie\", \"encyclopedia\". [S61] If none of the domains apply, use \"other\". [S62] Use\n\"domain\" as the key in the result json. [S63] 2) Extract structured information from the query. [S64] depending on the domains, and put them DIRECTLY in the result json. [S65] Here are the rules:\n\nInclude different keys into the result json\n\nFor \u2018encyclopedia\u2019 and \u2018other\u2019 queries, these are possible keys:\n- \u2018main_entity\u2019: extract the main entity of the query. [S66] For \u2018finance\u2019 queries, these are possible keys:\n- \u2018market_identifier\u2019: stock identifiers including individual company names, stock symbols. [S67] - \u2018metric\u2019: financial metrics that the query is asking about. [S68] This must be one of the following: \u2018price\u2019,\n\u2018dividend\u2019, \u2018P/E ratio\u2019, \u2018EPS\u2019, \u2018marketCap\u2019, and \u2018other\u2019. [S69] - \u2018datetime\u2019: time frame that the query asks about. [S70] When datetime is not explicitly mentioned, use\n\u2018Query Time\u2019 as default.", "question": "What are the two stages of the KDD Cup 2024 Meta CRAG challenge, and what is the purpose of each stage?", "answer": "<statement>The KDD Cup 2024 Meta CRAG challenge has two stages. Stage 1 is designed for the participants to develop their RAG solutions by submitting their systems against the leaderboard, whereas Stage 2 determines the final winners.<cite>[S22]</cite></statement>", "thinking": "Okay, let's tackle this question. The user is asking about the two stages of the KDD Cup 2024 Meta CRAG challenge and the purpose of each. I need to find the relevant information in the provided supporting context.\n\nFirst, I'll scan through the passage. The section titled \"A.2.3 KDD Cup 2024 Meta CRAG challenge\" seems important. Looking at the sentences here, [S22] mentions that there are two stages. The sentence says, \"The KDD Cup 2024 Meta CRAG challenge has two stages. Stage 1 is designed for the participants to develop their RAG solutions by submitting their systems against the leaderboard, whereas Stage 2 determines the final winners.\" \n\nSo, that's the key information. Stage 1's purpose is for developing RAG solutions via the leaderboard, and Stage 2 is for determining the final winners. I should check if there's more context in other sentences. \n\nLooking at [S23], it talks about splitting the benchmark data into three sets, but that's more about data splitting than the stages' purposes. [S24] and [S25] mention the data sets used in each stage, but the main purposes are covered in [S22]. \n\nNo other sentences in the passage elaborate further on the stages' purposes. So the answer should be based on [S22]. I need to make sure there are no other citations. The user wants each sentence in <statement> with citations. The answer should have two statements: one for each stage, citing [S22]. Wait, but the original sentence in [S22] combines both stages. So maybe split into two statements? Let me check the exact wording.\n\nThe original sentence: \"Stage 1 is designed for the participants to develop their RAG solutions by submitting their systems against the leaderboard, whereas Stage 2 determines the final winners.\" So this is one sentence, but it describes both stages. Therefore, the statement should include both parts, citing [S22]. \n\nSo the answer would be a single statement citing [S22], explaining both stages and their purposes. I need to structure it correctly as per the response format. The user might expect two separate statements, but since the information is in one sentence, it's better to keep it as one. Let me confirm the instructions: each sentence is inside <statement> tags. Since the original sentence is one, the answer should be one statement with [S22]. \n\nTherefore, the final answer is a single statement citing [S22], detailing both stages and their purposes."}
{"chunk": "Chunk:\n\n[S1] This must be one of the following: \u2018price\u2019,\n\u2018dividend\u2019, \u2018P/E ratio\u2019, \u2018EPS\u2019, \u2018marketCap\u2019, and \u2018other\u2019. [S2] - \u2018datetime\u2019: time frame that the query asks about. [S3] When datetime is not explicitly mentioned, use\n\u2018Query Time\u2019 as default. [S4] For \u2018movie\u2019 queries, these are possible keys:\n- \u2018movie_name\u2019: name of the movie\n- \u2018movie_aspect\u2019: if the query is about a movie, which movie aspect the query asks. [S5] This must be one\nof the following: \u2018budget\u2019, \u2018genres\u2019, \u2018original_language\u2019, \u2018original_title\u2019, \u2018release_date\u2019, \u2018revenue\u2019,\n\u2018title\u2019, \u2018cast\u2019, \u2018crew\u2019, \u2018rating\u2019, \u2018length\u2019. [S6] - \u2018person\u2019: person name related to moves\n- \u2018person_aspect\u2019: if the query is about a person, which person aspect the query asks. [S7] This must be\none of the following: \u2018acted_movies\u2019, \u2018directed_movies\u2019, \u2018oscar_awards\u2019, \u2018birthday\u2019. [S8] - \u2018year\u2019: if the query is about movies released in a specific year, extract the year\n\nFor \u2018music\u2019 queries, these are possible keys:\n- \u2018artist_name\u2019: name of the artist\n- \u2018artist_aspect\u2019: if the query is about an artist, extract the aspect of the artist. [S9] This must be one of the\nfollowing: \u2018member\u2019, \u2018birth place\u2019, \u2018birth date\u2019, \u2018lifespan\u2019, \u2018artist work\u2019, \u2018grammy award count\u2019,\n\u2018grammy award date\u2019. [S10] - \u2018song_name\u2019: name of the song\n- \u2018song_aspect\u2019: if the query is about a song, extract the aspect of the song. [S11] This must be one of the\n\n18\n\n\ffollowing: \u2018author\u2019, \u2018grammy award count\u2019, \u2018release country\u2019, \u2018release date\u2019. [S12] For \u2018sports\u2019 queries, these are possible keys:\n- \u2018sport_type\u2019: one of \u2018basketball\u2018, \u2018soccer\u2018, \u2018other\u2018\n- \u2018tournament\u2019: NBA, World Cup, Olympic. [S13] - \u2018team\u2019: teams that users are interested in. [S14] - \u2018datetime\u2019: time frame that the user is interested in. [S15] When datetime is not explicitly mentioned, use\n\u2018Query Time\u2019 as default. [S16] Return the results in a FLAT json. [S17] *NEVER include ANY EXPLANATION or NOTE in the output, ONLY OUTPUT JSON!!!*\n\"\"\"\n\nA.3.2 Performance of straightforward RAG solutions\n\nTable 11 summarizes the results of straightforward RAG solutions. [S18] Table 11: Performance of straightforward RAG solutions on CRAG. [S19] Model\n\nAccuracy (%)\n\nHallucination (%) Missing (%)\n\nTruthfulness (%)\n\nLLM only\n\nTask 1\n\nTask 2\n\nTask 3\n\nLlama 2 7B Chat\nLlama 2 70B Chat\nLlama 3 8B Instruct\nLlama 3 70B Instruct\nFalcon 40B\nFLAN-T5-XXL 11B\nMixtral-8x7B-Instruct-v0.1\nGPT-4 Turbo\n\nLlama 2 7B Chat\nLlama 2 70B Chat\nLlama 3 8B Instruct\nLlama 3 70B Instruct\nFalcon 40B\nFLAN-T5-XXL 11B\nMixtral-8x7B-Instruct-v0.1\nGPT-4 Turbo\n\nLlama 2 7B Chat\nLlama 2 70B Chat\nLlama 3 8B Instruct\nLlama 3 70B Instruct\nFalcon 40B\nFLAN-T5-XXL 11B\nMixtral-8x7B-Instruct-v0.1\nGPT-4 Turbo\n\nLlama 2 7B Chat\nLlama 2 70B Chat\nLlama 3 8B Instruct\nLlama 3 70B Instruct\nFalcon 40B\nFLAN-T5-XXL 11B\nMixtral-8x7B-Instruct-v0.1\nGPT-4 Turbo\n\n14.8\n22.3\n23.7\n32.3\n10.8\n9.4\n20.8\n33.5\n\n16.4\n29.3\n28.5\n35.6\n21.9\n27.5\n33.6\n35.9\n\n16.4\n29.1\n28.6\n37.5\n21.9\n27.4\n33.4\n41.3\n\n16.0\n31.9\n32.1\n40.6\n22.0\n27.8\n33.5\n43.6\n\n78.4\n28.7\n33.8\n28.9\n41.9\n8.7\n27.0\n13.5\n\n83.1\n61.0\n45.6\n31.1\n55.5\n36.5\n44.4\n28.2\n\n83.1\n61.1\n45.5\n29.2\n55.4\n36.6\n44.6\n25.1\n\n83.6\n65.7\n56.3\n31.6\n56.6\n37.1\n44.1\n30.1\n\n6.7\n49.0\n42.6\n38.8\n47.3\n81.9\n52.1\n53.0\n\n0.5\n9.7\n25.9\n33.3\n22.5\n36.0\n22.0\n35.9\n\n0.5\n9.7\n25.9\n33.3\n22.7\n36.0\n22.0\n33.6\n\n0.4\n2.4\n11.6\n27.8\n21.3\n35.1\n22.4\n26.3\n\n-63.6\n-6.4\n-10.1\n3.4\n-31.1\n0.7\n-6.2\n20.0\n\n-66.7\n-31.7\n-17.1\n4.5\n-33.6\n-9.0\n-10.8\n7.7\n\n-66.7\n-32.0\n-16.9\n8.3\n-33.5\n-9.2\n-11.2\n16.2\n\n-67.6\n-33.7\n-24.1\n9.1\n-34.6\n-9.3\n-10.6\n13.4\n\nA.4 Evaluating state-of-the-art industry solutions\n\nA.4.1 Quality\n\nWe send the CRAG public test set question as input to each of the SOTA RAG systems and collect\nthe responses for human grading. [S20] Note that the original Query Time and the provided retrieval results\nin CRAG are not used in this setting. [S21] We simply test the questions and ask human graders to grade\nthe responses based on when the query was made to the SOTA system. [S22] We called Copilot Pro,\nGemini Advanced, and ChatGPT Plus through their web interfaces and Perplexity.ai through its API. [S23] Meta SG, designed as a smart glasses (SG) assistant, includes default on-device components such as\nAutomatic Speech Recognition (ASR) and Text-to-Speech (TTS), which are not typically enabled\nby default in other systems. [S24] To ensure a fair comparison, we excluded these on-device components,\n\n19\n\n\fensuring that answer quality was not affected. [S25] We called each system on the following dates in\nPacific Time: 05/12/2024\u201e05/16/2024 (Copilot Pro), 05/20/2024\u201e05/28/2024 (Gemini Advanced),\n05/27/2024\u201e06/02/2024 (ChatGPT Plus), 05/15/2024\u201e05/16/2024 (Perplexity.ai), and 07/02/2024\n(Meta SG). [S26] We set the conversation style to \u201cPrecise\u201d when calling Copilot Pro and the temperature\nto 0 when calling Perplexity.ai. [S27] We select GPT-4o and llama-3-sonar-large-32k-online as the\nbase LLM when calling ChatGPT Plus and Perplexity.ai, respectively. [S28] A.4.2 Latency\n\nWe quantified the latency by calculating the time difference between the timestamp of the query\nsubmission to the system and the timestamp when the complete response was received. [S29] The latency of Perplexity.ai measured via API call is 2,455ms. [S30] Since latency measured by API call\nand web interface interactions are not directly comparable, we further called Perplexity.ai through\nits web interface and reported the latency under this setting in Table 6. [S31] Note that this latency may\nnot correspond to the accuracy numbers from the API calls. [S32] For Meta SG, we estimated a latency\ncomparable to other web interface interactions by excluding on-device components such as ASR and\nTTS from the overall end-to-end latency measurement. [S33] A.5 Limitations", "question": "What are the possible values for 'movie_aspect' in movie queries according to the text?", "answer": "<statement>The possible values for 'movie_aspect' in movie queries are 'budget', 'genres', 'original_language', 'original_title', 'release_date', 'revenue', 'title', 'cast', 'crew', 'rating', and 'length'.<cite>[S5]</cite></statement>", "thinking": "Okay, let's see. The user is asking about the possible values for 'movie_aspect' in movie queries according to the text provided.\n\nFirst, I need to look through the supporting context given. The user provided a chunk of text that includes several sentences labeled [S1] to [S33]. The question is specifically about 'movie_aspect', so I should focus on the parts that mention that.\n\nLooking through the sentences, I see that in [S4], there's a mention of keys for 'movie' queries. It lists 'movie_name' and 'movie_aspect'. Then, in [S5], it says that 'movie_aspect' must be one of the following: 'budget', 'genres', 'original_language', 'original_title', 'release_date', 'revenue', 'title', 'cast', 'crew', 'rating', 'length'. \n\nSo the answer should list all those values. I need to check if there are any other mentions of 'movie_aspect' elsewhere, but from a quick scan, [S4] and [S5] are the key ones. The other sentences talk about other aspects like 'person_aspect' or 'artist_aspect', but not relevant here. \n\nTherefore, the possible values are the ones listed in [S5]. The citation would be [S5]. I need to make sure that each value is correctly listed and that the citation is properly placed."}
{"chunk": "Chunk:\n\n[S1] Note that this latency may\nnot correspond to the accuracy numbers from the API calls. [S2] For Meta SG, we estimated a latency\ncomparable to other web interface interactions by excluding on-device components such as ASR and\nTTS from the overall end-to-end latency measurement. [S3] A.5 Limitations\n\nThe three tasks in our benchmark do not directly evaluate the construction of a first-stage retrieval\ncandidate pool, a demanding retrieval task in its own right. [S4] This design decision ensures that the\ncompetition remains both challenging and achievable within the KDD Cup\u2019s required three-month\ntimeframe. [S5] Despite the limitation, users of our dataset have the option to use the union of all 220K\nweb pages as a corpus to build a retriever. [S6] While this corpus does not match the entire web, it allows\nfor fair comparisons and manageable costs. [S7] 20", "question": "What do the three tasks in the benchmark not directly evaluate?", "answer": "<statement>The three tasks in the benchmark do not directly evaluate the construction of a first-stage retrieval candidate pool, a demanding retrieval task in its own right.<cite>[S3]</cite></statement>", "thinking": "Okay, let's see. The question is asking what the three tasks in the benchmark do not directly evaluate. I need to look at the supporting context provided.\n\nLooking through the sentences, sentence S3 says: \"The three tasks in our benchmark do not directly evaluate the construction of a first-stage retrieval candidate pool, a demanding retrieval task in its own right.\" That seems to directly answer the question. The answer is the construction of a first-stage retrieval candidate pool. The citation would be S3. I should make sure there are no other sentences that mention this. The other sentences talk about latency, limitations, and corpus options, but S3 is the key one here. So the answer should be that the three tasks don't evaluate the construction of the first-stage retrieval candidate pool, cited from S3."}
